name: Build Executables

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build executable
      run: |
        if [ "${{ matrix.os }}" == "windows-latest" ]; then \
          pyinstaller --onefile --name MdnsBroadcaster --distpath dist/windows src/Main.py; \
        else \
          pyinstaller --onefile --name MdnsBroadcaster --distpath dist/linux src/Main.py; \
        fi
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-executable
        path: |
          dist/windows/MdnsBroadcaster.exe
          dist/linux/MdnsBroadcaster

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: v1.0.1
        release_name: "Release v1.0.1"
        body: |
          This release includes the following executables:
          - Windows executable
          - Linux executable
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Windows Executable to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/windows/MdnsBroadcaster.exe
        asset_name: MdnsBroadcaster.exe
        asset_content_type: application/octet-stream

    - name: Upload Linux Executable to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/linux/MdnsBroadcaster
        asset_name: MdnsBroadcaster
        asset_content_type: application/octet-stream
